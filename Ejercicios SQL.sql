/*Ejercicio 1*/
SELECT * FROM PUBLIC.MOVIES;

/*Ejercicio 2*/
SELECT * FROM PUBLIC.GENRES;

/*Ejercicio 3*/
SELECT * FROM PUBLIC.STUDIOS WHERE STUDIO_ACTIVE = 1;

/*Ejercicio 4*/
SELECT * FROM PUBLIC.MEMBERS ORDER BY MEMBER_DISCHARGE_DATE DESC LIMIT 20;

/*Ejercicio 5*/
SELECT MOVIE_DURATION
FROM (
    SELECT MOVIE_DURATION, COUNT(*) AS frequency
    FROM PUBLIC.MOVIES
    GROUP BY MOVIE_DURATION
    ORDER BY frequency DESC
    LIMIT 20
) AS TOP_DURATIONS
ORDER BY MOVIE_DURATION DESC;

/*Ejercicio 6*/
SELECT * FROM PUBLIC.MOVIES WHERE YEAR(MOVIE_LAUNCH_DATE)>=2000 AND UPPER(MOVIE_NAME) LIKE 'A%';

/*Ejercicio 7*/
SELECT * FROM PUBLIC.ACTORS WHERE MONTH(ACTOR_BIRTH_DATE)=06;

/*Ejercicio 8*/
SELECT * FROM PUBLIC.ACTORS WHERE MONTH(ACTOR_BIRTH_DATE) != 06 AND ACTOR_DEAD_DATE IS NULL;

/*Ejercicio 9*/
SELECT ACTOR_NAME, AGE FROM (SELECT ACTOR_NAME, YEAR(CURRENT_DATE) - YEAR(ACTOR_BIRTH_DATE) 
           - CASE 
               WHEN MONTH(CURRENT_DATE) < MONTH(ACTOR_BIRTH_DATE) 
               OR (MONTH(CURRENT_DATE) = MONTH(ACTOR_BIRTH_DATE) AND DAY(CURRENT_DATE) < DAY(ACTOR_BIRTH_DATE)) 
               THEN 1 ELSE 0 
             END AS AGE, 
           ACTOR_DEAD_DATE
    FROM PUBLIC.ACTORS
) AS SUBQUERY
WHERE AGE > 50 AND ACTOR_DEAD_DATE IS NULL;

/*Ejercicio 10*/
SELECT ACTOR_NAME, AGE FROM (SELECT ACTOR_NAME, YEAR(CURRENT_DATE) - YEAR(ACTOR_BIRTH_DATE) 
           - CASE 
               WHEN MONTH(CURRENT_DATE) < MONTH(ACTOR_BIRTH_DATE) 
               OR (MONTH(CURRENT_DATE) = MONTH(ACTOR_BIRTH_DATE) AND DAY(CURRENT_DATE) < DAY(ACTOR_BIRTH_DATE)) 
               THEN 1 ELSE 0 
             END AS AGE, 
           ACTOR_DEAD_DATE
    FROM PUBLIC.ACTORS
) AS SUBQUERY
WHERE AGE < 50 AND ACTOR_DEAD_DATE IS NOT NULL;

/*Ejercicio 11*/
SELECT DIRECTOR_NAME, AGE FROM (SELECT DIRECTOR_NAME, YEAR(CURRENT_DATE) - YEAR(DIRECTOR_BIRTH_DATE) 
           - CASE 
               WHEN MONTH(CURRENT_DATE) < MONTH(DIRECTOR_BIRTH_DATE) 
               OR (MONTH(CURRENT_DATE) = MONTH(DIRECTOR_BIRTH_DATE) AND DAY(CURRENT_DATE) < DAY(DIRECTOR_BIRTH_DATE)) 
               THEN 1 ELSE 0 
             END AS AGE, 
           DIRECTOR_DEAD_DATE
    FROM PUBLIC.DIRECTORS
) AS SUBQUERY
WHERE AGE <= 40 AND DIRECTOR_DEAD_DATE IS NULL;

/*Ejercicio 12*/
SELECT AVG(AGE) AS AVG_ALIVE_DIRECTORS_AGE FROM (SELECT YEAR(CURRENT_DATE) - YEAR(DIRECTOR_BIRTH_DATE) 
           - CASE 
               WHEN MONTH(CURRENT_DATE) < MONTH(DIRECTOR_BIRTH_DATE) 
               OR (MONTH(CURRENT_DATE) = MONTH(DIRECTOR_BIRTH_DATE) AND DAY(CURRENT_DATE) < DAY(DIRECTOR_BIRTH_DATE)) 
               THEN 1 ELSE 0 
             END AS AGE,
             DIRECTOR_DEAD_DATE
    FROM PUBLIC.DIRECTORS
) AS SUBQUERY
WHERE DIRECTOR_DEAD_DATE IS NULL;

/*Ejercicio 13*/
SELECT AVG(AGE) AS AVG_DEAD_ACTORS_AGE FROM (SELECT YEAR(CURRENT_DATE) - YEAR(ACTOR_BIRTH_DATE) 
           - CASE 
               WHEN MONTH(CURRENT_DATE) < MONTH(ACTOR_BIRTH_DATE) 
               OR (MONTH(CURRENT_DATE) = MONTH(ACTOR_BIRTH_DATE) AND DAY(CURRENT_DATE) < DAY(ACTOR_BIRTH_DATE)) 
               THEN 1 ELSE 0 
             END AS AGE,
             ACTOR_DEAD_DATE
    FROM PUBLIC.ACTORS
) AS SUBQUERY
WHERE ACTOR_DEAD_DATE IS NOT NULL;

/*Ejercicio 14*/
SELECT MOVIE_NAME, STUDIO_NAME FROM PUBLIC.MOVIES M, PUBLIC.STUDIOS S WHERE M.STUDIO_ID = S.STUDIO_ID;

/*Ejercicio 15*/
SELECT DISTINCT M.* FROM PUBLIC.MEMBERS M
JOIN PUBLIC.MEMBERS_MOVIE_RENTAL R ON M.MEMBER_ID = R.MEMBER_ID 
WHERE YEAR(R.MEMBER_RENTAL_DATE) BETWEEN 2010 AND 2015;

/*Ejercicio 16*/
SELECT N.NATIONALITY_NAME, COUNT(*) AS MOVIE_COUNT FROM PUBLIC.MOVIES M
JOIN PUBLIC.NATIONALITIES N ON M.NATIONALITY_ID = N.NATIONALITY_ID
GROUP BY N.NATIONALITY_NAME;

/*Ejercicio 17*/
SELECT M.* FROM PUBLIC.MOVIES M
JOIN PUBLIC.GENRES G ON M.GENRE_ID = G.GENRE_ID
WHERE G.GENRE_NAME LIKE 'Documentary';

/*Ejercicio 18*/
SELECT * FROM PUBLIC.MOVIES M
JOIN PUBLIC.DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID 
WHERE YEAR(D.DIRECTOR_BIRTH_DATE) > 1980 AND D.DIRECTOR_DEAD_DATE IS NULL;

/*Ejercicio 19*/
SELECT D.DIRECTOR_NAME, M.MEMBER_NAME, M.MEMBER_TOWN AS TOWN FROM PUBLIC.MEMBERS M
JOIN PUBLIC.DIRECTORS D ON M.MEMBER_TOWN = D.DIRECTOR_BIRTH_PLACE;

/*Ejercicio 20*/
SELECT M.MOVIE_NAME, YEAR(M.MOVIE_LAUNCH_DATE) AS YEAR FROM PUBLIC.MOVIES M
JOIN PUBLIC.STUDIOS S ON M.STUDIO_ID = S.STUDIO_ID 
WHERE S.STUDIO_ACTIVE = 0;

/*Ejercicio 21*/
SELECT M.* FROM PUBLIC.MOVIES M
JOIN PUBLIC.MEMBERS_MOVIE_RENTAL R ON M.MOVIE_ID = R.MOVIE_ID 
ORDER BY R.MEMBER_RENTAL_DATE DESC LIMIT 10;

/*Ejercicio 22*/
SELECT D.DIRECTOR_NAME, COUNT(M.MOVIE_ID) AS MOVIE_COUNT FROM PUBLIC.DIRECTORS D
JOIN PUBLIC.MOVIES M ON D.DIRECTOR_ID = M.DIRECTOR_ID
WHERE YEAR(M.MOVIE_LAUNCH_DATE) < YEAR(DIRECTOR_BIRTH_DATE) + 41
GROUP BY D.DIRECTOR_NAME;

/*Ejercicio 23*/
SELECT D.DIRECTOR_NAME, AVG(M.MOVIE_DURATION) AS AVG_DURATION FROM PUBLIC.DIRECTORS D
JOIN PUBLIC.MOVIES M ON M.DIRECTOR_ID = D.DIRECTOR_ID
GROUP BY D.DIRECTOR_NAME;

/*Ejercicio 24*/
SELECT M.MOVIE_NAME, MIN(M.MOVIE_DURATION) AS MIN_DURATION FROM PUBLIC.MOVIES M
JOIN PUBLIC.MEMBERS_MOVIE_RENTAL R ON M.MOVIE_ID = R.MOVIE_ID 
WHERE R.MEMBER_RENTAL_DATE >= DATE '2017-01-25'
GROUP BY MOVIE_NAME
ORDER BY MIN_DURATION
LIMIT 1;

/*Ejercicio 25*/
SELECT D.DIRECTOR_NAME, COUNT(*) AS NUM_MOVIES_60_70_80 FROM PUBLIC.MOVIES M
JOIN PUBLIC.DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID 
WHERE YEAR(M.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1980 
AND LOWER(MOVIE_NAME) LIKE '%the%'
GROUP BY D.DIRECTOR_NAME;

/*Ejercicio 26*/
SELECT M.MOVIE_NAME, N.NATIONALITY_NAME, D.DIRECTOR_NAME FROM PUBLIC.MOVIES M
JOIN PUBLIC.NATIONALITIES N ON N.NATIONALITY_ID = M.NATIONALITY_ID 
JOIN PUBLIC.DIRECTORS D ON D.DIRECTOR_ID = M.DIRECTOR_ID;

/*Ejercicio 27*/
SELECT M.MOVIE_NAME, A.ACTOR_NAME FROM PUBLIC.MOVIES M
JOIN PUBLIC.MOVIES_ACTORS MA ON M.MOVIE_ID = MA.MOVIE_ID
JOIN PUBLIC.ACTORS A ON MA.ACTOR_ID = A.ACTOR_ID
ORDER BY M.MOVIE_NAME, A.ACTOR_NAME;

/*Ejercicio 28*/
SELECT D.DIRECTOR_NAME, COUNT(R.MOVIE_ID) AS NUM_RENTALS
FROM PUBLIC.DIRECTORS D
JOIN PUBLIC.MOVIES M ON D.DIRECTOR_ID = M.DIRECTOR_ID
JOIN PUBLIC.MEMBERS_MOVIE_RENTAL R ON M.MOVIE_ID = R.MOVIE_ID
GROUP BY D.DIRECTOR_NAME
ORDER BY NUM_RENTALS DESC
LIMIT 1;

/*Ejercicio 29*/
SELECT S.STUDIO_NAME, COUNT(A.AWARD_ID) AS NUM_AWARDS
FROM PUBLIC.STUDIOS S
JOIN PUBLIC.MOVIES M ON S.STUDIO_ID = M.STUDIO_ID
JOIN PUBLIC.AWARDS A ON M.MOVIE_ID = A.MOVIE_ID
GROUP BY S.STUDIO_NAME;

/*Ejercicio 30*/
SELECT A.ACTOR_NAME, COUNT(*) AS NUM_NOMINATIONS_NOT_WON FROM PUBLIC.ACTORS A
JOIN PUBLIC.MOVIES_ACTORS MA ON A.ACTOR_ID = MA.ACTOR_ID
JOIN PUBLIC.MOVIES M ON MA.MOVIE_ID = M.MOVIE_ID
JOIN PUBLIC.AWARDS AW ON M.MOVIE_ID = AW.MOVIE_ID
WHERE A.ACTOR_ID = AW.AWARD_ALMOST_WIN 
OR A.ACTOR_ID = AW.AWARD_NOMINATION 
OR M.MOVIE_ID = AW.MOVIE_ID 
GROUP BY A.ACTOR_NAME;




